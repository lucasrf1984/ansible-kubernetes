---
- hosts: all
  become: yes
  tasks:
    - name: Addding Kubernetes repository
      ansible.builtin.blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        block: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          create: yes
    
    - name: Initializing the kubelet service
      ansible.builtin.systemd:
        state: started
        enabled: yes
        name: kubelet
        
    - name: Update modules
      yum: 
        name: '*'
        state: latest
      
    - name: Install Kubernetes Prereq + git + ansible
      yum:
        name: kubelet, kubeadm, kubectl, git, ansible
        state: present
        
    - name: Updating host file with Kubernet Master & nodes
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          [masters]
          master.zlkube.com ansible_host=192.168.5.110 ansible_user=root
          
          [workers]
          node1.zlkube.com ansible_host=192.168.5.111 ansible_user=root
          node2.zlkube.com ansible_host=192.168.5.112 ansible_user=root
          
    - name: Updating ansible inventory files
      ansible.builtin.blockinfile:
        path: /etc/ansible/hosts
        block: |
          192.168.5.110 master.zlkube.com master-node
          192.168.5.111 node1.zlkube.com node1 worker-node
          192.168.5.112 node2.zlkube.com node2 worker-node
        
    - name: Create kube O.S Group
      ansible.builtin.group:
        name: kube
        state: present
        
    - name: Adding Kubernetes admin user
      ansible.builtin.user:
        name: kubeadm
        shell: /bin/bash
        group: kube
        createhome: yes 
        generate_ssh_key: yes
        comment: Kubernetes user
        
    - name: allow 'kubeadm' to use sudo without needing a password
      lineinfile:
        dest: /etc/sudoers
        line: 'kubeadm ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
        
    - name: set up authorized keys for the adm user
      authorized_key: user=kubeadm key="{{item}}"
      with_file:
        - ~/.ssh/id_rsa.pub
        
    - name: Update modules
      yum: 
        name: '*'
        state: latest
        
    - name: Permit communication of Kubernetes cluster(6443/tcp)
      ansible.posix.firewalld:
        port: 6443/tcp
        permanent: yes
        state: enabled
        
    - name: Permit communication of Kubernetes cluster(2379-2380/tcp)
      ansible.posix.firewalld:
        port: 2379-2380/tcp
        permanent: yes
        state: enabled
        
    - name: Permit communication of Kubernetes cluster(10250-10352/tcp)
      ansible.posix.firewalld:
        port: 10250-10352/tcp
        permanent: yes
        state: enabled
        
    - name: Permit communication of Kubernetes cluster(10255/tcp)
      ansible.posix.firewalld:
        port: 10255/tcp
        permanent: yes
        state: enabled
        
    - name: Firewalld Reloading
      ansible.builtin.systemd:
        state: restarted
        enabled: yes
        name: firewalld
        
    - name: Updating iptable configuration
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/k8s.conf
        block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1      
          
    - name: This ensures that packets are properly processed by IP tables during filtering and port forwarding.
      ansible.builtin.shell: sysctl --system
      
    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled
         
    - name: Reenable SWAP in fstab (1/2)
      replace:
        path: /etc/fstab
        regexp: '^# (.+?\sswap\s+sw\s+.*)$'
        replace: '\1'

    - name: Enable SWAP (2/2)
      shell: |
        swapon -a
    
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: create .kubeadm directory
      become: yes
      become_user: kubeadm
      file:
        path: $HOME/.kubeadm
        state: directory
        mode: 0755

    - name: copies admin.conf to user's kubeadm config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/kubeadm/.kubeadm/config
        remote_src: yes
        owner: kubeadm

    - name: install Pod network
      become: yes
      become_user: kubeadm
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml 
      args:
        chdir: $HOME
        
    - name: Get the token for joining the worker nodes
      become: yes
      become_user: kubeadm
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command
        
    - debug:
      msg: "{{ kubernetes_join_command.stdout }}"

    - name: Copy join command to local file.
      become: yes
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
      
    - name: Copying node deployment playbook
      ansible.builtin.copy:
        src: node_deploy.yml
        dest: /tmp/node_deploy.yml
        owner: vagrant
        group: vagrant
        mode: '0644'